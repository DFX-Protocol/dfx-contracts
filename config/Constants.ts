export const tokens = {
	"sepolia":{
		USDT: {
			contractName: "ERC20Mock[USDT]",
			address: "0x757221aeDDe3ECE6271D91C3E5f1aE305974022c",
			decimals: 18,
			price: 0.9995,
			priceDecimals: 18,
			isStrictStable: true,
			priceFeed: "0x4f4F09AD0A1d05B612234Ea38019C0abda0c92E5",
			tokenWeight: 2000,
			minProfitBps: 0,
			maxUsdgAmount: 5 * 1000 * 1000,
			bufferAmount: 1 * 1000 * 1000,
			isStable: true,
			isShortable: false,
		},
		BUSD: {
			contractName: "ERC20Mock[BUSD]",
			address: "0x8577CcCD4cF71Dd23F4cf31Be940A07E89174d56",
			decimals: 18,
			priceDecimals: 18,
			price: 0.999962,
			isStrictStable: true,
			priceFeed: "0x94e316c03A7a72aE8da7B9d449c9031E69BF9d56",
			tokenWeight: 2000,
			minProfitBps: 0,
			maxUsdgAmount: 5 * 1000 * 1000,
			bufferAmount: 1 * 1000 * 1000,
			isStable: true,
			isShortable: false,
		},
		BTC: {
			contractName: "ERC20Mock[BTC]",
			address: "0x0297783626F4dBDa1f21333c6A584447a9261a42",
			decimals: 18,
			isStrictStable: false,
			price: 30443.90,
			priceFeed: "0xb94aCcF79Fe27510B3EB64A8320Bd35B99D72556",
			tokenWeight: 23000, // tokenWeights allows customisation of index composition
			minProfitBps: 0,
			maxUsdgAmount: 115 * 1000 * 1000, // Total pool capacity
			bufferAmount: 2500,  // Spare amount to keep in pool that should not be used by swaps but for leverage alone
			priceDecimals: 18,
			fastPricePrecision: 1000,
			maxCumulativeDeltaDiff: 0.1 * 10 * 1000 * 1000, // 10%
			isStable: false,
			isShortable: true,
			maxGlobalLongSize: 60 * 1000 * 1000,
			maxGlobalShortSize: 25 * 1000 * 1000,
			openInterestLimitLong: 80 * 1000 * 1000,
			openInterestLimitShort: 50 * 1000 * 1000,
			maxOpenInterestLong: 80 * 1000 * 1000,
			maxOpenInterestShort: 50 * 1000 * 1000,
			openInterestIncrementLong: 50 * 1000,
			openInterestIncrementShort: 50 * 1000,
			maxLiquidityThresholdLong: 20 * 1000 * 1000,
			maxLiquidityThresholdShort: 12 * 1000 * 1000,
			minLiquidityThresholdLong: 12 * 1000 * 1000,
			minLiquidityThresholdShort: 5 * 1000 * 1000,
		},
		BNB: {
			contractName: "ERC20Mock[BNB]",
			address: "0xAeb6b50E347C22a95479A397f9a9aff6b26ECA2B",
			decimals: 18,
			priceDecimals: 18,
			price: 243.4264,
			isStrictStable: false,
			priceFeed: "0x32Cb79d075818945FE6B6fa12FDd3eca6D8136b9",
			tokenWeight: 18000,
			minProfitBps: 0,
			maxUsdgAmount: 80 * 1000 * 1000,
			bufferAmount: 8000,
			isStable: false,
			isShortable: true,

		},
		WETH: {
			contractName: "WETH",
			address: "0x4f3fe6C943B2e501651164E293a24D5dDB62131e",
			decimals: 18,
			isStrictStable: false,
			price: 1911.08,
			priceFeed: "0xA2E29091259FECba41e4255D1901472514b952a7",
			priceDecimals: 18,
			fastPricePrecision: 1000,
			maxCumulativeDeltaDiff: 0.1 * 10 * 1000 * 1000, // 10%
			tokenWeight: 28000,
			minProfitBps: 0,
			maxUsdgAmount: 180 * 1000 * 1000,
			bufferAmount: 60000,
			isStable: false,
			isShortable: true,
			maxGlobalLongSize: 80 * 1000 * 1000,
			maxGlobalShortSize: 30 * 1000 * 1000,
			openInterestLimitLong: 110 * 1000 * 1000,
			openInterestLimitShort: 70 * 1000 * 1000,
			maxOpenInterestLong: 100 * 1000 * 1000,
			maxOpenInterestShort: 60 * 1000 * 1000,
			openInterestIncrementLong: 50 * 1000,
			openInterestIncrementShort: 50 * 1000,
			maxLiquidityThresholdLong: 20 * 1000 * 1000,
			maxLiquidityThresholdShort: 12 * 1000 * 1000,
			minLiquidityThresholdLong: 12 * 1000 * 1000,
			minLiquidityThresholdShort: 5 * 1000 * 1000,
		}
	},
	"baseGoerli":{
		USDT: {
			contractName: "ERC20Mock[USDT]",
			address: "0x110511f937A2fc94b51F2543337038fD73603c9c",
			decimals: 18,
			price: 0.9995,
			priceDecimals: 18,
			isStrictStable: true,
			priceFeed: "0xd5973EB46D6fE54E82C5337dD9536B35D080912C",
			tokenWeight: 15000,
			minProfitBps: 0,
			maxUsdgAmount: 5 * 1000 * 1000,
			bufferAmount: 1 * 1000 * 1000,
			isStable: true,
			isShortable: false,
		},
		USDC: {
			name: "ERC20Mock[USDC]",
			address: "0xE3bD346D48D7D37A21fBfe84101Ec64269866b57",
			decimals: 18,
			priceFeed: "0xb85765935B4d9Ab6f841c9a00690Da5F34368bc0",
			priceDecimals: 18,
			isStrictStable: true,
			tokenWeight: 20000,
			minProfitBps: 0,
			maxUsdgAmount: 255 * 1000 * 1000,
			bufferAmount: 180 * 1000 * 1000,
			isStable: true,
			isShortable: false,
		},
		DAI: {
			name: "ERC20Mock[DAI]",
			address: "0x504a7e07d779bc0497E7496D32b5E0E099557568",
			decimals: 18,
			priceFeed: "0x440bD1535a02243d72E0fEED45B137efcC98bF7e",
			priceDecimals: 18,
			isStrictStable: true,
			tokenWeight: 10000,
			minProfitBps: 0,
			maxUsdgAmount: 38.5 * 1000 * 1000,
			bufferAmount: 7 * 1000 * 1000,
			isStable: true,
			isShortable: false,
		},
		LINK: {
			name: "ERC20Mock[LINK]",
			address: "0x2339eF937ca0e74AB287B156E5bace2783c3314C",
			decimals: 18,
			priceFeed: "0x907A947C5F34eC68F8D4eD87d4bac3FA6431a4D1",
			priceDecimals: 18,
			fastPricePrecision: 1000,
			maxCumulativeDeltaDiff: 0.1 * 10 * 1000 * 1000, // 10%
			isStrictStable: false,
			tokenWeight: 5000,
			minProfitBps: 0,
			maxUsdgAmount: 6.1 * 1000 * 1000,
			bufferAmount: 450000,
			isStable: false,
			isShortable: true,
			spreadBasisPoints: 0,
			maxGlobalShortSize: 500 * 1000,
			maxGlobalLongSize: 500 * 1000,
			openInterestLimitLong: 500 * 1000,
			openInterestLimitShort: 500 * 1000,
			maxOpenInterestLong: 500 * 1000,
			maxOpenInterestShort: 500 * 1000,
			openInterestIncrementLong: 25 * 1000,
			openInterestIncrementShort: 25 * 1000,
			maxLiquidityThresholdLong: 250 * 1000,
			maxLiquidityThresholdShort: 250 * 1000,
			minLiquidityThresholdLong: 50 * 1000,
			minLiquidityThresholdShort: 50 * 1000,
		},
		BTC: {
			contractName: "ERC20Mock[BTC]",
			address: "0xf560224826949E6479b884bBf815C9413870997b",
			decimals: 18,
			isStrictStable: false,
			price: 30443.90,
			priceFeed: "0xAC15714c08986DACC0379193e22382736796496f",
			tokenWeight: 22000, // tokenWeights allows customisation of index composition
			minProfitBps: 0,
			maxUsdgAmount: 115 * 1000 * 1000, // Total pool capacity
			bufferAmount: 2500,  // Spare amount to keep in pool that should not be used by swaps but for leverage alone
			priceDecimals: 18,
			fastPricePrecision: 1000,
			maxCumulativeDeltaDiff: 0.1 * 10 * 1000 * 1000, // 10%
			isStable: false,
			isShortable: true,
			maxGlobalLongSize: 60 * 1000 * 1000,
			maxGlobalShortSize: 25 * 1000 * 1000,
			openInterestLimitLong: 80 * 1000 * 1000,
			openInterestLimitShort: 50 * 1000 * 1000,
			maxOpenInterestLong: 80 * 1000 * 1000,
			maxOpenInterestShort: 50 * 1000 * 1000,
			openInterestIncrementLong: 50 * 1000,
			openInterestIncrementShort: 50 * 1000,
			maxLiquidityThresholdLong: 20 * 1000 * 1000,
			maxLiquidityThresholdShort: 12 * 1000 * 1000,
			minLiquidityThresholdLong: 12 * 1000 * 1000,
			minLiquidityThresholdShort: 5 * 1000 * 1000,
		},
		WETH: {
			contractName: "WETH",
			address: "0x0d97c5403ED2A30578c7Fc62528069B0A02b3E38",
			decimals: 18,
			isStrictStable: false,
			price: 1911.08,
			priceFeed: "0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2",
			priceDecimals: 18,
			fastPricePrecision: 1000,
			maxCumulativeDeltaDiff: 0.1 * 10 * 1000 * 1000, // 10%
			tokenWeight: 28000,
			minProfitBps: 0,
			maxUsdgAmount: 180 * 1000 * 1000,
			bufferAmount: 60000,
			isStable: false,
			isShortable: true,
			maxGlobalLongSize: 80 * 1000 * 1000,
			maxGlobalShortSize: 30 * 1000 * 1000,
			openInterestLimitLong: 110 * 1000 * 1000,
			openInterestLimitShort: 70 * 1000 * 1000,
			maxOpenInterestLong: 100 * 1000 * 1000,
			maxOpenInterestShort: 60 * 1000 * 1000,
			openInterestIncrementLong: 50 * 1000,
			openInterestIncrementShort: 50 * 1000,
			maxLiquidityThresholdLong: 20 * 1000 * 1000,
			maxLiquidityThresholdShort: 12 * 1000 * 1000,
			minLiquidityThresholdLong: 12 * 1000 * 1000,
			minLiquidityThresholdShort: 5 * 1000 * 1000,
		}
	}
};

export const chainConfig = {
	"sepolia": {
		isOracleAvailable: false,
		isAmmEnabled: true,
		isTestnet: true
	},
	"baseGoerli": {
		isOracleAvailable: true,
		isAmmEnabled: false,
		isTestnet: true
	}
};